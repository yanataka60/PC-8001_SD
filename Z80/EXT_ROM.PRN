			  Z80 ASSEMBLER - ZASM VER 1.6
                      	;2022.7.24 FILESでSYNTAX ERRORとなる事象を回避、SERCH FILEと聞いてくる仕様を削除
                      	;2022.7.25 FILESを↑キーで打ち切ったとき時々Syntax Errorが発生するため2行戻す動きを廃止
                      	;2022.8.4  BASIC戻り時のSyntax Error対策を修正
                      	;2022.8.14 MONITOR GコマンドでPOP BCが抜けていたので追加。
                      	;          mk2用と統合
                      	;            拡張ROM認識コードを041H,042H,00Hとした。
                      	;            SHIFTキーを押しながら起動することで拡張ROMを有効にするか選択できるようにした。(mk2用)
                      	;            mk2においてもfiles、save、killコマンドでSyntaxErrorが出ないように修正
                      	;2022.8.21 MONITOR Lコマンドで読み込み時にファンクションキーエリアであればCTRL+B、CLOADをSD用に書き換えるようにした
                      	;2023.5.30 MONHOTの扱い方を修正、MONERRを移動
                      	;          LOAD中専用のスタックポインタとすることでCLEAR文でSPを変更していなくてもE800H以降に正常にLOAD出来るよう対処
                      	;2023.6.10 SDアクセスサービスルーチンを追加。5F3AH代替ルーチンを見直し。
                      	;          PC-8001_SDの存在チェックとして$6000から$41,$42,$00,$18,$1C,$00,$C3までを固定。
                      	;2023.9.10 N-BASIC 1.0を判別してMONで初期化
                      	
  0257                	CONOUT		EQU		0257H		;CRTへの1バイト出力
  0350                	DISPBL		EQU		0350H		;ベルコードの出力
  03A9                	CSR			EQU		03A9H		;カーソルの移動
  03F3                	CSRADR		EQU		03F3H		;キャラクタ座標->VRAMアドレス変換
  0BE2                	DSPCSR		EQU		0BE2H		;カーソル表示の開始
  0FAC                	KYSCAN		EQU		0FACH		;リアルタイム・キーボード・スキャニング
  1850                	BASVER		EQU		1850H		;N-BASIC Version判定
  1B7E                	LINPUT		EQU		1B7EH		;スクリーン・エディタ
  1F8B                	AFTLOAD		EQU		1F8BH		;BASICテキストの終了アドレス設定
  40A6                	CHROUT		EQU		40A6H		;デバイスへの1バイト出力
  52ED                	MSGOUT		EQU		52EDH		;文字列の出力2
  5B86                	RENUM9		EQU		5B86H		;BASICプログラムSAVE前処理
  5C3C                	MONBGN		EQU		5C3CH		;MONITOR開始アドレス
  5E39                	HEXCHK		EQU		5E39H		;16進コード・チェック
  5E4B                	BINCV4		EQU		5E4BH		;16進コードからバイナリ形式への変換
  5E83                	MONBHX		EQU		5E83H		;8ビット数値から16進コードへの変換
  5EBD                	MONDME		EQU		5EBDH		;16進データ2桁表示
  5EC0                	MONDHL		EQU		5EC0H		;16進4桁表示
  5FC1                	AZLCNV		EQU		5FC1H		;小文字->大文字変換
  5FCA                	MONCLF		EQU		5FCAH		;CRコード及びLFコードの表示
  5FD4                	MONSPC		EQU		5FD4H		;スペースの表示
                      	
  EA63                	CUSPOS		EQU		0EA63H		;カーソル位置
  EAC0                	FKDEF		EQU		0EAC0H		;AUTO START キー定義場所初期値
  EB54                	BASSRT		EQU		0EB54H		;プログラムテキスト開始位置
  EC96                	IBUF		EQU		0EC96H		;キー入力バッファ
  EDC0                	FKPINT		EQU		0EDC0H		;キーポインタ
  EF3E                	FILNAM		EQU		0EF3EH		;現在ロード中ファイルネーム
  EFA0                	VARBGN		EQU		0EFA0H		;変数領域の始まりアドレス
  F139                	TBLOAD		EQU		0F139H		;LOADコマンドジャンプアドレス
  F142                	TBKILL		EQU		0F142H		;KILLコマンドジャンプアドレス
  F14B                	TBSAVE		EQU		0F14BH		;SAVEコマンドジャンプアドレス
  F14E                	TBFILES		EQU		0F14EH		;FILESコマンドジャンプアドレス
  FF34                	MONHL		EQU		0FF34H
  FF36                	MONSP		EQU		0FF36H
  FF3D                	SADRS		EQU		0FF3DH
  FF3F                	EADRS		EQU		0FF3FH
  FF40                	ACFLGD		EQU		0FF40H      ;オートラン機能ダブルコーテーション検出フラグ
  FF41                	ACFLGC		EQU		0FF41H      ;オートラン機能CLOAD検出フラグ
  FF66                	LBUF		EQU		0FF66H
                      	
                      	;PC-8001
  00FC                	PPI_A		EQU		0FCH
                      	;PC-8001mk2
                      	;PPI_A		EQU		07CH
                      	
  00FD                	PPI_B		EQU		PPI_A+1
  00FE                	PPI_C		EQU		PPI_A+2
  00FF                	PPI_R		EQU		PPI_A+3
                      	
                      	;PC-8001
                      	;8255 PORT アドレス FCH〜FFH
                      	;0FCH PORTA 送信データ(下位4ビット)
                      	;0FDH PORTB 受信データ(8ビット)
                      	;PC-8001mk2
                      	;8255 PORT アドレス 7CH〜7FH
                      	;7CH PORTA 送信データ(下位4ビット)
                      	;7DH PORTB 受信データ(8ビット)
                      	
                      	;
                      	;PC-8001
                      	;0FEH PORTC Bit
                      	;PC-8001mk2
                      	;7EH PORTC Bit
                      	
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;PC-8001
                      	;0FFH コントロールレジスタ
                      	;PC-8001mk2
                      	;7FH コントロールレジスタ
                      	
                      	
                      	
  6000                	        ORG		6000H
                      	
  6000  4142          			DB		041H,042H         ;拡張ROM認識コード
                      	
  6002  00            			NOP
  6003  181C          			JR		INIT              ;POWER ONで8255を初期化、LOAD、SAVE、FILES、KILLのジャンプ先を設定
  6005  00            			NOP
                      	;PC-8001mk2の作法に統一
                      	;		CALL	INIT              ;POWER ONで8255を初期化、LOAD、SAVE、FILES、KILLのジャンプ先を設定
                      	;		RET
                      	
                      	;*********** OPENしているファイルから1BYTE読み出し転送 ****************
                      	;5F9EH代替ルーチン
                      	;A <- 読み出されたデータ
                      	;     読み込み用としてOPENしているファイルから1BYTE読み出し
  6006  C3A063        			JP		D_5F9E
                      	
                      	;*********** CMT LOAD 直呼び出し (EMI PLAYER用) *****************************
                      	;5F3AH代替ルーチン
                      	;     読み出しオープンされているファイルから機械語フォーマットで保存されている機械語を読み出す。
                      	;     正常終了 CF=0、異常終了 CF=1
  6009  C36764        			JP		H_5F3A
                      	
                      	;*********** MONITOR HOT START  (EMI PLAYER用) ********************
                      	;5C66H代替ルーチン
  600C  C3F460        			JP		MONHOT
                      	
                      	;*********** SD READ OPEN *****************************
                      	;HL <- DOS_FILENAME先頭アドレス
                      	;      HLレジスタが示すDOS_FILENAMEで読み込み用ファイルをオープン
                      	;      DOS_FILENAMEは32文字まで、最後に00Hをつけること。
                      	;      フラグレジスタ以外のレジスタは変化しない。
                      	;      正常終了 CF=0、異常終了 CF=1
  600F  C3A963        			JP		ROPEN
                      	
                      	;*********** SD WRITE APPEND OPEN ****************************
                      	;HL <- DOS_FILENAME先頭アドレス
                      	;      HLレジスタが示すDOS_FILENAMEで追加書き込み用としてファイルをオープン
                      	;      DOS_FILENAMEは32文字まで、最後に00Hをつけること。
                      	;      フラグレジスタ以外のレジスタは変化しない。
                      	;      正常終了 CF=0、異常終了 CF=1
  6012  C3C563        			JP		WAOPEN
                      	
                      	;*********** SD WRITE 直呼び出し 5ED9H代替 ***************************
                      	;HL <- 書き込み開始アドレス
                      	;DE <- 書き込み終了アドレス
                      	;      書込み用でオープンされているファイルに書き込み開始アドレスから
                      	;      書き込み終了アドレスまでのメモリ内容を機械語フォーマットで書出し、クローズする。
                      	;      正常終了 CF=0、異常終了 CF=1
  6015  C3D663        			JP		D_5ED9
                      	
                      	;*********** SD WRITE 1BYTE 5F2FH代替 ***************************
                      	;A <- 書き込みデータ
                      	;     書込み用でオープンされているファイルにAレジスタのデータを追加書込みする。
                      	;     フラグレジスタ以外のレジスタは変化しない。
                      	;     正常終了 CF=0、異常終了 CF=1
  6018  C31764        			JP		D_5F2F
                      	
                      	;*********** SD WRITE NEW OPEN ****************************
                      	;HL <- DOS_FILENAME先頭アドレス
                      	;      HLレジスタが示すDOS_FILENAMEで書き込み用として新たにファイルをオープン。
                      	;      同名のDOS_FILENAMEのファイルがある場合は削除したのちにオープンする。
                      	;      DOS_FILENAMEは32文字まで、最後に00Hをつけること。
                      	;      フラグレジスタ以外のレジスタは変化しない。
                      	;      正常終了 CF=0、異常終了 CF=1
  601B  C33064        			JP		WNOPEN
                      	
                      	;*********** SD WRITE CLOSE ****************************
                      	;      書込み用ファイルをクローズする。
                      	;      フラグレジスタ以外のレジスタは変化しない。
                      	;      正常終了 CF=0、異常終了 CF=1
  601E  C34264        			JP		WCLOSE
                      	
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  6021  3E8A          	INIT:	LD		A,8AH
  6023  D3FF          			OUT		(PPI_R),A
                      	;出力BITをリセット
  6025  AF            			XOR		A                 ;PORTA <- 0
  6026  D3FC          			OUT		(PPI_A),A
  6028  D3FE          			OUT		(PPI_C),A         ;PORTC <- 0
                      	
                      	;************** SHIFTキースキャン *****************
  602A  DB08          			IN		A,(08H)
  602C  E640          			AND		40H
                      	;************** Aキースキャン *********************
                      	;		IN		A,(02H)
                      	;		AND		02H
                      	;キースキャンしてSHIFTキー(Aキー)が押されていなければ通常起動
                      	;		RET		NZ
                      	
                      	;キースキャンしてSHIFTキー(Aキー)が押されていなければ拡張ROM起動
  602E  C8            			RET		Z
                      	
                      	;LOAD、SAVE、FILES、KILLのジャンプ先を設定
  602F  21B865        	INI2:	LD		HL,CMDLOAD
  6032  2239F1        			LD		(TBLOAD),HL
                      	
  6035  212066        			LD		HL,CMDSAVE
  6038  224BF1        			LD		(TBSAVE),HL
                      	
  603B  217366        			LD		HL,CMDFILES
  603E  224EF1        			LD		(TBFILES),HL
                      	
  6041  218266        			LD		HL,CMDKILL
  6044  2242F1        			LD		(TBKILL),HL
                      	
  6047  C9            	INI3:	RET
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  6048                	RCVBYTE:
  6048  CD7D60        			CALL	F1CHK             ;PORTC BIT7が1になるまでLOOP
  604B  DBFD          			IN		A,(PPI_B)         ;PORTB -> A
  604D  F5            			PUSH 	AF
  604E  3E05          			LD		A,05H
  6050  D3FF          			OUT		(PPI_R),A         ;PORTC BIT2 <- 1
  6052  CD8460        			CALL	F2CHK             ;PORTC BIT7が0になるまでLOOP
  6055  3E04          			LD		A,04H
  6057  D3FF          			OUT		(PPI_R),A         ;PORTC BIT2 <- 0
  6059  F1            			POP 	AF
  605A  C9            			RET
                      			
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  605B                	SNDBYTE:
  605B  F5            			PUSH	AF
  605C  1F            			RRA
  605D  1F            			RRA
  605E  1F            			RRA
  605F  1F            			RRA
  6060  E60F          			AND		0FH
  6062  CD6C60        			CALL	SND4BIT
  6065  F1            			POP		AF
  6066  E60F          			AND		0FH
  6068  CD6C60        			CALL	SND4BIT
  606B  C9            			RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  606C                	SND4BIT:
  606C  D3FC          			OUT		(PPI_A),A
  606E  3E05          			LD		A,05H
  6070  D3FF          			OUT		(PPI_R),A          ;PORTC BIT2 <- 1
  6072  CD7D60        			CALL	F1CHK             ;PORTC BIT7が1になるまでLOOP
  6075  3E04          			LD		A,04H
  6077  D3FF          			OUT		(PPI_R),A          ;PORTC BIT2 <- 0
  6079  CD8460        			CALL	F2CHK
  607C  C9            			RET
                      			
                      	;**** BUSYをCHECK(1) ****
                      	; 82H BIT7が1になるまでLOP
  607D  DBFE          	F1CHK:	IN		A,(PPI_C)
  607F  E680          			AND		80H               ;PORTC BIT7 = 1?
  6081  28FA          			JR		Z,F1CHK
  6083  C9            			RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 82H BIT7が0になるまでLOOP
  6084  DBFE          	F2CHK:	IN		A,(PPI_C)
  6086  E680          			AND		80H               ;PORTC BIT7 = 0?
  6088  20FA          			JR		NZ,F2CHK
  608A  C9            			RET
                      	
                      	;************* 代替MONITOR START *************************
  608B  2234FF        	MONINI:	LD		(MONHL),HL
  608E  ED7336FF      			LD		(MONSP),SP
                      			
                      	;************* N-BASICV1.0判別 ***************************
  6092  3A5018        			LD		A,(BASVER)
  6095  FE30          			CP		30H
  6097  280D          			JR		Z,VER0
                      	;************ (TBLOAD)にCMDLOADがセットされていなければMONBGNへジャンプして通常MONITOR起動 ***************
  6099  2A39F1        			LD		HL,(TBLOAD)
  609C  11B865        			LD		DE,CMDLOAD
  609F  ED52          			SBC		HL,DE
  60A1  C23C5C        			JP		NZ,MONBGN
  60A4  1806          			JR		VER1
                      	
  60A6                	VER0:
                      	;************ N-BASICV1.0用 SHIFTキーが押されていなければPC-8001_SDを使用可能に設定、押されていればMONBGNへジャンプして通常MONITOR起動 ***************
  60A6  CD2160        			CALL	INIT
  60A9  CA3C5C        			JP		Z,MONBGN
                      	
  60AC                	VER1:
                      	;		PUSH	HL                ;タイトルを表示するとBASICから戻ったときに自動実行が途切れてしまうため削除
                      	;		LD		HL,MONMSG
                      	;		CALL	MSGOUT
                      	;		POP		HL
                      			
  60AC  01EF60        	CMD0:	LD		BC,MONERR         ;パラメータエラーをRET Cで戻りる先をセット
  60AF  C5            			PUSH	BC
  60B0                	CMD1:
  60B0  3E2A          			LD		A,'*'
  60B2  CD5702        			CALL	CONOUT            ;プロンプト表示
  60B5  CDE20B        			CALL	DSPCSR
  60B8  CD7E1B        			CALL	LINPUT            ;スクリーンエディットを使いたいために使用、このためCTRL+BではBASICに戻れない
                      									  ;HLにIBUF-1が入って戻っている LD HL,IBUF-1
  60BB                	CMD2:
  60BB  3840          			JR		C,MONCTB          ;CTRL+Bの代替、CTRL+CでBASICに復帰
  60BD  23            			INC		HL
  60BE  7E            			LD		A,(HL)
  60BF  FE2A          			CP		'*'               ;入力時とスクリーンエディット時でIBUFに入る位置が変わるための対処、「*」ならポインタを進める
  60C1  28F8          			JR		Z,CMD2
  60C3  7E            			LD		A,(HL)
  60C4  CDC15F        			CALL	AZLCNV            ;入力文字を大文字へ変換
  60C7  FE42          			CP		'B'
  60C9  2832          			JR		Z,MONCTB          ;CTRL+Bの代替、BコマンドでもBASICに復帰
  60CB  FE44          			CP		'D'
  60CD  CA1061        			JP		Z,STMD            ;Dコマンド
  60D0  FE53          			CP		'S'
  60D2  CA8A61        			JP		Z,STMW            ;Sコマンド
  60D5  FE46          			CP		'F'
  60D7  CAC961        			JP		Z,STLT            ;Fコマンド
  60DA  FE4C          			CP		'L'
  60DC  CA7F62        			JP		Z,MONLOAD         ;Lコマンド
  60DF  FE57          			CP		'W'
  60E1  CAAA64        			JP		Z,MONSAVE         ;Wコマンド
  60E4  FE47          			CP		'G'
  60E6  281B          			JR		Z,GOCMD           ;Gコマンド
  60E8  3EF4          			LD		A,0F4H
  60EA  CD7165        			CALL	SDERR             ;コマンドエラー
  60ED  18C1          			JR		CMD1
                      			
                      	;MONMSG:	DEFB	0CH,'**PC-8001_SD Monitor **',0DH,0AH,00H
                      	
                      	;************************* MONHOTの扱い方を修正、MONERRを移動 2023.5.30 ****************************
                      	;パラメータエラー処理
  60EF  3EF6          	MONERR:	LD		A,0F6H
  60F1  CD7165        			CALL	SDERR
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
                      	;		JP		CMD1
                      	
                      	;*********** MONITOR HOT START  (EMI PLAYER用)  *******************************
                      	;5C66H代替ルーチン
  60F4                	MONHOT:
  60F4  ED7B36FF      			LD		SP,(MONSP)        ;スタックポインタを復帰
  60F8  CDCA5F        			CALL	MONCLF
  60FB  18AF          			JR		CMD0
                      	
                      	;************ Bコマンド BASIC復帰 ***********************
  60FD                	MONCTB:
                      	;***** 2022.8.10 BUG修正 ***********
  60FD  C1            			POP		BC                ;パラメータエラー戻り先を破棄
                      	;***********************************
  60FE  2A34FF        			LD		HL,(MONHL)
  6101  FB            			EI
  6102  C9            			RET
                      	
                      	;************ Gコマンド アドレスxxxxへジャンプ ***************
  6103  23            	GOCMD:	INC		HL
  6104  CD4365        			CALL	STFN
  6107  CD1165        			CALL	HLHEX             ;4桁の16進数であればHLにセットして続行
  610A  D8            			RET		C
                      	;		JP		C,MONERR
  610B  CDCA5F        			CALL	MONCLF
  610E  C1            			POP		BC
  610F  E9            			JP		(HL)              ;HLの示すアドレスにジャンプ
                      	
                      	;************ Dコマンド アドレスxxxxからのMEMORYをDUMP **********************
  6110  23            	STMD:	INC		HL
  6111  CD4365        			CALL	STFN
  6114  CD1165        			CALL	HLHEX             ;4桁の16進数であればSADRSにセットして続行
  6117  D8            			RET		C
                      	;		JP		C,MONERR
  6118  223DFF        			LD		(SADRS),HL        ;SARDS保存
                      	
  611B  21CE66        	STMD6:	LD		HL,MSG_AD1        ;DUMP TITLE表示
  611E  CDED52        			CALL	MSGOUT
  6121  0E10          			LD		C,10H             ;16行(128Byte)を表示
  6123  2A3DFF        	STMD7:	LD		HL,(SADRS)        ;アドレス表示
  6126  CDC05E        			CALL	MONDHL
  6129  CDD45F        			CALL	MONSPC
                      	
                      			
  612C  0608          			LD		B,08H             ;一行(8Byte)のデータを16進数表示
  612E  CDBD5E        	STMD0:	CALL	MONDME
  6131  CDD45F        			CALL	MONSPC
  6134  CDAC0F        			CALL	KYSCAN
  6137  FE1B          			CP		1BH               ;表示途中でもESCで打ち切り
  6139  284C          			JR		Z,STMD4
  613B  23            			INC		HL
  613C  05            			DEC		B
  613D  20EF          			JR		NZ,STMD0
                      	
  613F  2A3DFF        			LD		HL,(SADRS)
  6142  0608          			LD		B,08H             ;一行(8Byte)のデータをキャラクタ表示
  6144  7E            	STMD2:	LD		A,(HL)
  6145  FE20          			CP		20H               ;文字化けに対処 20H未満なら20Hに置き換え
  6147  3002          			JR		NC,STMD8
  6149  3E20          			LD		A,20H
  614B  CD5702        	STMD8:	CALL	CONOUT
  614E  CDAC0F        			CALL	KYSCAN
  6151  FE1B          			CP		1BH               ;表示途中でもESCで打ち切り
  6153  2832          			JR		Z,STMD4
  6155  23            			INC		HL
  6156  05            			DEC		B
  6157  20EB          			JR		NZ,STMD2
                      	
  6159  223DFF        			LD		(SADRS),HL
  615C  CDCA5F        			CALL	MONCLF
                      	
  615F  0D            			DEC		C
  6160  20C1          			JR		NZ,STMD7
                      			
  6162  21F666        			LD		HL,MSG_AD2        ;入力待ちメッセージ表示
  6165  CDED52        			CALL	MSGOUT
  6168  CDAC0F        	STMD3:	CALL	KYSCAN            ;1文字入力待ち
  616B  A7            			AND		A
  616C  28FA          			JR		Z,STMD3
  616E  FE1B          			CP		1BH               ;ESCで打ち切り
  6170  2815          			JR		Z,STMD4
  6172  CDC15F        			CALL	AZLCNV
  6175  FE42          			CP		42H               ;BからBACK
  6177  200B          			JR		NZ,STMD5
  6179  2A3DFF        			LD		HL,(SADRS)
  617C  110001        			LD		DE,0100H
  617F  ED52          			SBC		HL,DE
  6181  223DFF        			LD		(SADRS),HL
  6184  C31B61        	STMD5:	JP		STMD6
  6187                	STMD4:
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  6187  C3F460        			JP		MONHOT
                      	;		JP		CMD1
                      	
                      	;************ Sコマンド アドレスxxxxからMEMORYに書き込み **********************
  618A  23            	STMW:	INC		HL
  618B  CD4365        			CALL	STFN
  618E  CD1165        			CALL	HLHEX             ;4桁の16進数であればHLにセットして続行
  6191  D8            			RET		C
                      	;		JP		C,MONERR
                      	
  6192  1A            	STSP1:	LD		A,(DE)
  6193  A7            			AND		A
  6194  2830          			JR		Z,STMW9           ;アドレスのみなら終了
  6196  FE20          			CP		20H
  6198  2003          			JR		NZ,STMW1
  619A  13            			INC		DE                ;空白は飛ばす
  619B  18F5          			JR		STSP1
                      	
  619D                	STMW1:
  619D  CD2965        			CALL	TWOHEX
  61A0  380D          			JR		C,STMW8
  61A2  77            			LD		(HL),A            ;2桁の16進数があれば(HL)に書き込み
  61A3  23            			INC		HL
                      	
  61A4  1A            	STSP2:	LD		A,(DE)
  61A5  A7            			AND		A               ;一行終了
  61A6  2807          			JR		Z,STMW8
  61A8  FE20          			CP		20H
  61AA  20F1          			JR		NZ,STMW1
  61AC  13            			INC		DE                ;空白は飛ばす
  61AD  18F5          			JR		STSP2
                      	
  61AF  E5            	STMW8:	PUSH	HL
  61B0  219368        			LD		HL,MSG_FDW        ;行頭に'*S '
  61B3  CDED52        			CALL	MSGOUT
  61B6  E1            			POP		HL
  61B7  E5            			PUSH	HL
  61B8  CDC05E        			CALL	MONDHL            ;アドレス表示
  61BB  CDD45F        			CALL	MONSPC
  61BE  CD7E1B        			CALL	LINPUT            ;行入力繰り返し
                      	
  61C1  D1            			POP		DE
  61C2  23            			INC		HL
  61C3  EB            			EX		DE,HL
  61C4  18CC          			JR		STSP1
  61C6                	STMW9:
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  61C6  C3F460        			JP		MONHOT
                      	;		JP		CMD1
                      	
                      	;************ Fコマンド DIRLIST **********************
  61C9  23            	STLT:	INC		HL
  61CA  CD4365        			CALL	STFN              ;検索文字列を送信
  61CD  EB            			EX		DE,HL
  61CE  219668        			LD		HL,DEFDIR         ;行頭に'*L 'を付けることでカーソルを移動させリターンで実行できるように
  61D1  010300        			LD		BC,DEND-DEFDIR
  61D4  CDDE61        			CALL	DIRLIST           ;DIRLIST本体をコール
  61D7  A7            			AND		A                 ;00以外ならERROR
  61D8  C47165        			CALL	NZ,SDERR
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  61DB  C3F460        			JP		MONHOT
                      	;		JP		CMD1
                      	
                      	
                      	;**** DIRLIST本体 (HL=行頭に付加する文字列の先頭アドレス BC=行頭に付加する文字列の長さ) ****
                      	;****              戻り値 A=エラーコード ****
  61DE                	DIRLIST:
  61DE  3E83          			LD		A,83H             ;DIRLISTコマンド83Hを送信
  61E0  CD0A65        			CALL	STCD              ;コマンドコード送信
  61E3  A7            			AND		A                 ;00以外ならERROR
  61E4  C27E62        			JP		NZ,DLRET
                      			
  61E7  C5            			PUSH	BC
  61E8  0621          			LD		B,21H             ;ファイルネーム検索文字列33文字分を送信
  61EA  1A            	STLT1:	LD		A,(DE)
  61EB  A7            			AND		A
  61EC  2001          			JR		NZ,STLT2
  61EE  AF            			XOR		A
  61EF  CDC15F        	STLT2:	CALL	AZLCNV            ;大文字に変換
  61F2  FE22          			CP		22H               ;ダブルコーテーション読み飛ばし
  61F4  2003          			JR		NZ,STLT3
  61F6  13            			INC		DE
  61F7  18F1          			JR		STLT1
  61F9  CD5B60        	STLT3:	CALL	SNDBYTE           ;ファイルネーム検索文字列を送信
  61FC  13            			INC		DE
  61FD  05            			DEC		B
  61FE  20EA          			JR		NZ,STLT1
  6200  C1            			POP		BC
                      	
  6201  CD4860        			CALL	RCVBYTE           ;状態取得(00H=OK)
  6204  A7            			AND		A                 ;00以外ならERROR
  6205  C27E62        			JP		NZ,DLRET
                      	
  6208                	DL1:
  6208  E5            			PUSH	HL
  6209  C5            			PUSH	BC
  620A  1166FF        			LD		DE,LBUF
  620D  EDB0          			LDIR
  620F  EB            			EX		DE,HL
  6210  CD4860        	DL2:	CALL	RCVBYTE           ;'00H'を受信するまでを一行とする
  6213  A7            			AND		A
  6214  280C          			JR		Z,DL3
  6216  FEFF          			CP		0FFH              ;'0FFH'を受信したら終了
  6218  281E          			JR		Z,DL4
  621A  FEFE          			CP		0FEH              ;'0FEH'を受信したら一時停止して一文字入力待ち
  621C  2821          			JR		Z,DL5
  621E  77            			LD		(HL),A
  621F  23            			INC		HL
  6220  18EE          			JR		DL2
  6222  3600          	DL3:	LD		(HL),00H
  6224  2166FF        			LD		HL,LBUF           ;'00H'を受信したら一行分を表示して改行
  6227  7E            	DL31:	LD		A,(HL)
  6228  A7            			AND		A
  6229  2806          			JR		Z,DL33
  622B  CDA640        			CALL	CHROUT
  622E  23            			INC		HL
  622F  18F6          			JR		DL31
  6231  CDCA5F        	DL33:	CALL	MONCLF
  6234  C1            			POP		BC
  6235  E1            			POP		HL
  6236  18D0          			JR		DL1
  6238  CD4860        	DL4:	CALL	RCVBYTE           ;状態取得(00H=OK)
  623B  C1            			POP		BC
  623C  E1            			POP		HL
  623D  183F          			JR		DLRET
                      	
  623F  E5            	DL5:	PUSH	HL
  6240  211267        			LD		HL,MSG_KEY1       ;HIT ANT KEY表示
  6243  CDED52        			CALL	MSGOUT
  6246  2A63EA        			LD		HL,(CUSPOS)
  6249  CDF303        			CALL	CSRADR
  624C  3E1E          			LD		A,1EH
  624E  77            			LD		(HL),A
  624F  3E1C          			LD		A,1CH
  6251  CD5702        			CALL	CONOUT
  6254  212967        			LD		HL,MSG_KEY2       ;HIT ANT KEY表示
  6257  CDED52        			CALL	MSGOUT
  625A  CDCA5F        			CALL	MONCLF
  625D  E1            			POP		HL
  625E  CDAC0F        	DL6:	CALL	KYSCAN            ;1文字入力待ち
  6261  CDC15F        			CALL	AZLCNV
  6264  A7            			AND		A
  6265  28F7          			JR		Z,DL6
  6267  FE1B          			CP		1BH               ;ESCで打ち切り
  6269  280B          			JR		Z,DL7
  626B  FE1E          			CP		1EH               ;カーソル↑で打ち切り
  626D  2807          			JR		Z,DL7
  626F  FE42          			CP		42H               ;「B」で前ページ
  6271  2805          			JR		Z,DL8
  6273  AF            			XOR		A                 ;それ以外で継続
  6274  1802          			JR		DL8
                      	;DL9:
                      	;		LD		A,1EH             ;時々Syntax Errorが発生するため廃止
                      	;		CALL	CONOUT
                      	;		LD		A,1EH
                      	;		CALL	CONOUT            ;カーソル↑で打ち切ったときにカーソル2行上へ
  6276  3EFF          	DL7:	LD		A,0FFH            ;0FFH中断コードを送信
  6278  CD5B60        	DL8:	CALL	SNDBYTE
  627B  C31062        			JP		DL2
                      			
  627E  C9            	DLRET:	RET
                      			
                      	
                      	;************ Lコマンド .CMT LOAD *************************
  627F  3E71          	MONLOAD:LD		A,71H            ;Lコマンド71Hを送信
  6281  CD5264        			CALL	STCMD
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  6284  C2F460        			JP		NZ,MONHOT
                      	;		JP		NZ,CMD1
                      	
  6287  E5            			PUSH	HL
                      	; *********** オートラン書き換え用フラグクリア *** 2022.8.21 ********
  6288  AF            			XOR		A
  6289  2140FF        			LD		HL,ACFLGD
  628C  77            			LD		(HL),A
  628D  23            			INC		HL
  628E  77            			LD		(HL),A
                      	; ********************************************************
  628F  211801        			LD		HL,0118H         ;1文字目、24行目へカーソルを移動
  6292  CDA903        			CALL	CSR
  6295  CDCA5F        			CALL	MONCLF
  6298  E1            			POP		HL
  6299  CD4860        			CALL	RCVBYTE          ;ヘッダー受信
  629C  FE3A          			CP		3AH              ;3AHであれば続行
  629E  280F          			JR		Z,MCNLOAD
  62A0  215068        			LD		HL,MSG_F2        ;3AH以外ならエラー
  62A3  CDED52        			CALL	MSGOUT
  62A6  CDCA5F        			CALL	MONCLF
  62A9  CD5003        			CALL	DISPBL
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  62AC  C3F460        			JP		MONHOT
                      	;		JP		CMD1
                      			
  62AF  21A866        	MCNLOAD:LD		HL,MSG_LD        ;LOADING表示
  62B2  CDED52        			CALL	MSGOUT
                      	
                      	; *********** LOAD中専用のスタックポインタとすることでCLEAR文でSPを変更していなくてもE800H以降に正常にLOAD出来るよう対処 2023.5.30 ********
  62B5  31FFFF        			LD		SP,0FFFFH
                      	
  62B8  213EFF        			LD		HL,SADRS+1       ;SADRS取得
  62BB  CD4860        			CALL	RCVBYTE
  62BE  77            			LD		(HL),A
  62BF  2B            			DEC		HL
  62C0  CD4860        			CALL	RCVBYTE
  62C3  77            			LD		(HL),A
  62C4  CD4860        			CALL	RCVBYTE          ;チェックサム廃棄
                      			
  62C7  2A3DFF        			LD		HL,(SADRS)
  62CA  CD4860        	MCLD1:	CALL	RCVBYTE          ;ヘッダー3AH受信、廃棄
  62CD  CD4860        			CALL	RCVBYTE          ;データ長
  62D0  A7            			AND		A
  62D1  280F          			JR		Z,MCLD3          ;データ長が0なら終了
  62D3  47            			LD		B,A
  62D4  CD4860        	MCLD2:	CALL	RCVBYTE          ;実データ受信
                      	; ************* オートラン機能の読み替えを追加 ****** 2022.8.21 ************
                      	;		LD		(HL),A
  62D7  CDEE62        			CALL	AUTOCHK
                      	;****************************************************************
  62DA  23            			INC		HL
  62DB  10F7          			DJNZ	MCLD2
  62DD  CD4860        			CALL	RCVBYTE          ;チェックサム廃棄
  62E0  18E8          			JR		MCLD1
  62E2  CD4860        	MCLD3:	CALL	RCVBYTE          ;チェックサム廃棄
  62E5  21B166        			LD		HL,MSG_OK        ;OK表示
  62E8  CDED52        			CALL	MSGOUT
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  62EB  C3F460        			JP		MONHOT           ;SPを復帰してコマンド待ちへ
                      	;		JP		CMD1
                      	
                      	; ************ ファンクションキーエリアへの書込みなら書き換え ** 2022.8.21 **
                      	; HL : 書き込みアドレス
                      	; A  : 書き込みデータ
                      	; CTRL+B -> CTRL+C
                      	; CLOAD  -> LOAD
                      	; "xxxx" -> ""
  62EE  D5            	AUTOCHK:PUSH	DE
  62EF  C5            			PUSH	BC
  62F0  EB            			EX		DE,HL
  62F1  214015        			LD		HL,1540H         ;-(EAC0H)
  62F4  19            			ADD		HL,DE
  62F5  D29763        			JP		NC,ACRET         ;EAC0H未満なら通常書込み
  62F8  21E414        			LD		HL,14E4H         ;-(EB1BH+1)
  62FB  19            			ADD		HL,DE
  62FC  DA9763        			JP		C,ACRET          ;EB1CH以上なら通常書込み
  62FF  FE02          			CP		02H
  6301  2005          			JR		NZ,ACHK1         ;CTRL+B -> CTRL+C
  6303  3E03          			LD		A,03H
  6305  C39763        			JP		ACRET            ;CRTL+Cに書き換えてリターン
                      			
  6308  47            	ACHK1:	LD		B,A
  6309  2140FF        			LD		HL,ACFLGD        ;ダブルコーテーションフラグをCHK
  630C  7E            			LD		A,(HL)
  630D  A7            			AND		A
  630E  280E          			JR		Z,ACHK11         ;フラグOFFなら次のCHKへ
  6310  78            			LD		A,B
  6311  FE22          			CP		'"'              ;フラグONならダブルコーテーションかCHK
  6313  2004          			JR		NZ,ACHK10        ;ダブルコーテーションではないなら書き込まずにリターン
  6315  AF            			XOR		A                ;ダブルコーテーションならフラグをリセット
  6316  77            			LD		(HL),A
  6317  187D          			JR		ACHK40           ;ダブルコーテーションを書き込んでリターン
                      	
  6319  EB            	ACHK10:	EX		DE,HL
  631A  2B            			DEC		HL               ;フラグONでダブルコーテーションでないなら書き込まない。書き込みアドレスもINCしないでリターン
  631B  C39963        			JP		ACRET2
                      	
  631E  78            	ACHK11:	LD		A,B
  631F  FE22          			CP		'"'              ;フラグOFFならダブルコーテーションかCHK
  6321  2008          			JR		NZ,ACHK20        ;ダブルコーテーションでないなら次のCHKへ
  6323  3E01          			LD		A,01H            ;ダブルコーテーションならフラグON
  6325  77            			LD		(HL),A
  6326  AF            			XOR		A
  6327  23            			INC		HL
  6328  77            			LD		(HL),A           ;CLOADフラグをリセット
  6329  186B          			JR		ACHK40           ;ダブルコーテーションを書き込んでリターン
                      	
  632B  2141FF        	ACHK20:	LD		HL,ACFLGC        ;CLOADフラグをCHK
  632E  7E            			LD		A,(HL)
  632F  FE00          			CP		00H              ;一致無し
  6331  282D          			JR		Z,ACHK30
  6333  FE01          			CP		01H              ;'C'まで一致
  6335  2837          			JR		Z,ACHK31
  6337  FE02          			CP		02H              ;'L'まで一致
  6339  2841          			JR		Z,ACHK32
  633B  FE03          			CP		03H              ;'0'まで一致
  633D  284B          			JR		Z,ACHK33
  633F  78            			LD		A,B              ;'A'まで一致
  6340  FE44          			CP		'D'
  6342  2804          			JR		Z,ACHK39
  6344  FE64          			CP		'd'
  6346  204E          			JR		NZ,ACHK40
  6348  AF            	ACHK39:	XOR		A                ;'CLOAD'が一致
  6349  77            			LD		(HL),A           ;CLOADフラグをリセット
  634A  EB            			EX		DE,HL            ;書き込みポインタを4つ戻して'LOAD'に上書き
  634B  2B            			DEC		HL
  634C  2B            			DEC		HL
  634D  2B            			DEC		HL
  634E  2B            			DEC		HL
  634F  3E4C          			LD		A,'L'
  6351  77            			LD		(HL),A
  6352  23            			INC		HL
  6353  3E4F          			LD		A,'O'
  6355  77            			LD		(HL),A
  6356  23            			INC		HL
  6357  3E41          			LD		A,'A'
  6359  77            			LD		(HL),A
  635A  23            			INC		HL
  635B  3E44          			LD		A,'D'
  635D  77            			LD		(HL),A
  635E  1839          			JR		ACRET2
                      	
  6360  78            	ACHK30:	LD		A,B
  6361  FE43          			CP		'C'
  6363  2804          			JR		Z,ACHK301
  6365  FE63          			CP		'c'
  6367  2033          			JR		NZ,ACHK41
  6369  3E01          	ACHK301:LD		A,01H            ;'C'が一致
  636B  77            			LD		(HL),A
  636C  1828          			JR		ACHK40
                      	
  636E  78            	ACHK31:	LD		A,B
  636F  FE4C          			CP		'L'
  6371  2804          			JR		Z,ACHK311
  6373  FE6C          			CP		'l'
  6375  2025          			JR		NZ,ACHK41
  6377  3E02          	ACHK311:LD		A,02H            ;'L'が一致
  6379  77            			LD		(HL),A
  637A  181A          			JR		ACHK40
                      	
  637C  78            	ACHK32:	LD		A,B
  637D  FE4F          			CP		'O'
  637F  2804          			JR		Z,ACHK321
  6381  FE6F          			CP		'o'
  6383  2017          			JR		NZ,ACHK41
  6385  3E03          	ACHK321:LD		A,03H            ;'O'が一致
  6387  77            			LD		(HL),A
  6388  180C          			JR		ACHK40
                      	
  638A  78            	ACHK33:	LD		A,B
  638B  FE41          			CP		'A'
  638D  2804          			JR		Z,ACHK331
  638F  FE61          			CP		'a'
  6391  2009          			JR		NZ,ACHK41
  6393  3E04          	ACHK331:LD		A,04H            ;'A'が一致
  6395  77            			LD		(HL),A
                      			
  6396  78            	ACHK40:	LD		A,B
                      	
  6397  EB            	ACRET:	EX		DE,HL
  6398  77            			LD		(HL),A           ;取り敢えず書き込み
  6399  C1            	ACRET2:	POP		BC
  639A  D1            			POP		DE
  639B  C9            			RET
                      	
  639C  AF            	ACHK41:	XOR		A                ;'CLOAD'と一致しなかったのでフラグをリセットして書き込み
  639D  77            			LD		(HL),A
  639E  18F6          			JR		ACHK40
                      	
                      	;********** 5F9EH READ ONE BYTE FROM CMTの代替 *********
  63A0  3E72          	D_5F9E:	LD		A,72H            ;コマンド72Hを送信
  63A2  CD0A65        			CALL	STCD
  63A5  CD4860        			CALL	RCVBYTE          ;1Byteのみ受信
  63A8  C9            			RET
                      	
                      	;********** SD READ OPEN *******************************
  63A9  E5            	ROPEN:	PUSH	HL
  63AA  D5            			PUSH	DE
  63AB  C5            			PUSH	BC
  63AC  F5            			PUSH	AF
  63AD  3E76          			LD		A,76H            ;コマンド76Hを送信
  63AF  CD0A65        			CALL	STCD
  63B2  A7            			AND		A
  63B3  200A          			JR		NZ,ERRRET
  63B5  CD5765        			CALL	STFS             ;ファイルネームを送信
                      	
  63B8  AF            	OKRET:	XOR		A                ;正常終了 フラグをリセット後、全レジスタ復帰
  63B9  C1            			POP		BC
  63BA  78            			LD		A,B
  63BB  C1            			POP		BC
  63BC  D1            			POP		DE
  63BD  E1            			POP		HL
  63BE  C9            			RET
                      	
  63BF  F1            	ERRRET:	POP		AF               ;異常終了 全レジスタ復帰後、CF=1
  63C0  C1            			POP		BC
  63C1  D1            			POP		DE
  63C2  E1            			POP		HL
  63C3  37            			SCF
  63C4  C9            			RET
                      	
                      	;********** SD WRITE APPEND OPEN *******************************
  63C5  E5            	WAOPEN:	PUSH	HL
  63C6  D5            			PUSH	DE
  63C7  C5            			PUSH	BC
  63C8  F5            			PUSH	AF
  63C9  3E77          			LD		A,77H            ;コマンド77Hを送信
  63CB  CD0A65        			CALL	STCD
  63CE  A7            			AND		A
  63CF  20EE          			JR		NZ,ERRRET
  63D1  CD5765        			CALL	STFS             ;ファイルネームを送信
  63D4  18E2          			JR		OKRET
                      	
                      	;*********** SD WRITE 直呼び出し 5ED9H代替 ***************************
  63D6  D5            	D_5ED9:	PUSH	DE
  63D7  223DFF        			LD		(SADRS),HL       ;SARDS保存
  63DA  ED533FFF      			LD		(EADRS),DE       ;EARDS保存
  63DE  3E7A          			LD		A,7AH            ;コマンド7AHを送信
  63E0  CD0A65        			CALL	STCD
  63E3  A7            			AND		A
  63E4  202D          			JR		NZ,D_5ED9V5
                      	
  63E6  2A3DFF        			LD		HL,(SADRS)       ;SADRSを送信
  63E9  7D            			LD		A,L
  63EA  CD5B60        			CALL	SNDBYTE
  63ED  7C            			LD		A,H
  63EE  CD5B60        			CALL	SNDBYTE
  63F1  ED5B3FFF      			LD		DE,(EADRS)       ;送信する全体バイト数を算出するためにEADRSを送信
  63F5  7B            			LD		A,E
  63F6  CD5B60        			CALL	SNDBYTE
  63F9  7A            			LD		A,D
  63FA  CD5B60        			CALL	SNDBYTE
  63FD                	D_5ED9V1:
  63FD  7E            			LD		A,(HL)           ;SADRSからEADRSまでを送信
  63FE  CD5B60        			CALL	SNDBYTE
  6401  7C            			LD		A,H
  6402  BA            			CP		D
  6403  2004          			JR		NZ,D_5ED9V2
  6405  7D            			LD		A,L
  6406  BB            			CP		E
  6407  2803          			JR		Z,D_5ED9V3       ;HL = DE までLOOP
  6409                	D_5ED9V2:
  6409  23            			INC		HL
  640A  18F1          			JR		D_5ED9V1
  640C                	D_5ED9V3:
  640C  CD4860        			CALL	RCVBYTE          ;状態取得(00H=OK)
  640F  23            			INC		HL
  6410  D1            			POP		DE
  6411  AF            			XOR		A
  6412  C9            			RET
  6413                	D_5ED9V5:
  6413  D1            			POP		DE
  6414  AF            			XOR		A
  6415  37            			SCF
  6416  C9            			RET
                      	;********** SD WRITE 1BYTE 5F2FH代替 *********
  6417  E5            	D_5F2F:	PUSH	HL
  6418  D5            			PUSH	DE
  6419  C5            			PUSH	BC
  641A  F5            			PUSH	AF
  641B  3E78          			LD		A,78H            ;コマンド78Hを送信
  641D  CD0A65        			CALL	STCD
  6420  A7            			AND		A
  6421  209C          			JR		NZ,ERRRET
  6423  F1            			POP		AF
  6424  F5            			PUSH	AF
  6425  CD5B60        			CALL	SNDBYTE          ;1Byteのみ送信
  6428  CD4860        			CALL	RCVBYTE          ;状態取得(00H=OK)
  642B  A7            			AND		A
  642C  2091          			JR		NZ,ERRRET
  642E  1888          			JR		OKRET
                      	
                      	;********** SD WRITE NEW OPEN *******************************
  6430  E5            	WNOPEN:	PUSH	HL
  6431  D5            			PUSH	DE
  6432  C5            			PUSH	BC
  6433  F5            			PUSH	AF
  6434  3E79          			LD		A,79H            ;コマンド79Hを送信
  6436  CD0A65        			CALL	STCD
  6439  A7            			AND		A
  643A  2083          			JR		NZ,ERRRET
  643C  CD5765        			CALL	STFS             ;ファイルネームを送信
  643F  C3B863        			JP		OKRET
                      	
                      	;********** SD WRITE CLOSE *******************************
  6442  E5            	WCLOSE:	PUSH	HL
  6443  D5            			PUSH	DE
  6444  C5            			PUSH	BC
  6445  F5            			PUSH	AF
  6446  3E7B          			LD		A,7BH            ;コマンド7BHを送信
  6448  CD0A65        			CALL	STCD
  644B  A7            			AND		A
  644C  C2BF63        			JP		NZ,ERRRET
  644F  C3B863        			JP		OKRET
                      	
                      	;**** コマンド、ファイル名送信 (IN:A コマンドコード HL:ファイルネームの先頭)****
  6452  23            	STCMD:	INC		HL
  6453  CD4365        			CALL	STFN             ;空白除去
  6456  E5            			PUSH	HL
  6457  CD0A65        			CALL	STCD             ;コマンドコード送信
  645A  E1            			POP		HL
  645B  A7            			AND		A                ;00以外ならERROR
  645C  C27165        			JP		NZ,SDERR
  645F  CD5765        			CALL	STFS             ;ファイルネーム送信
  6462  A7            			AND		A                ;00以外ならERROR
  6463  C27165        			JP		NZ,SDERR
  6466  C9            			RET
                      	
                      	;****2023.6.10 H_5F3Aとしたことで不要となった ****************************
                      	;************ 5F3AH READ FROM TAPEの代替 (EMI PLAYER用)*******************
                      	;D_5F3A:
                      	;************ 連続してAUTO STARTをするためにフラグポイント再設定 (正解なのかは自信なし)************
                      	;		LD		HL,FKDEF
                      	;		LD		(FKPINT),HL
                      	;**************************************************************************************
                      	;		
                      	;ファイル名指定なしとしてMONITOR Lコマンド実行 *********************
                      	;		LD		HL,DEFCR-1
                      	;		JP		MONLOAD
                      	
                      	;************ 5F3AH READ FROM TAPEの代替 (汎用)*******************
  6467  21AF66        	H_5F3A:	LD		HL,DEFCR-1       ;ファイル名指定なし
  646A  3E71          			LD		A,71H            ;Lコマンド71Hを送信
  646C  CD5264        			CALL	STCMD
  646F  C2BF63        			JP		NZ,ERRRET
                      	
  6472  CD4860        			CALL	RCVBYTE          ;ヘッダー受信
  6475  FE3A          			CP		3AH              ;3AHであれば続行
  6477  2803          			JR		Z,H_5V1
  6479  C3BF63        			JP		ERRRET
                      			
  647C  213EFF        	H_5V1:	LD		HL,SADRS+1       ;SADRS取得
  647F  CD4860        			CALL	RCVBYTE
  6482  77            			LD		(HL),A
  6483  2B            			DEC		HL
  6484  CD4860        			CALL	RCVBYTE
  6487  77            			LD		(HL),A
  6488  CD4860        			CALL	RCVBYTE          ;チェックサム廃棄
                      			
  648B  2A3DFF        			LD		HL,(SADRS)
  648E  CD4860        	H_5V2:	CALL	RCVBYTE          ;ヘッダー3AH受信、廃棄
  6491  CD4860        			CALL	RCVBYTE          ;データ長
  6494  A7            			AND		A
  6495  280D          			JR		Z,H_5V4          ;データ長が0なら終了
  6497  47            			LD		B,A
  6498  CD4860        	H_5V3:	CALL	RCVBYTE          ;実データ受信
  649B  77            			LD		(HL),A
  649C  23            			INC		HL
  649D  10F9          			DJNZ	H_5V3
  649F  CD4860        			CALL	RCVBYTE          ;チェックサム廃棄
  64A2  18EA          			JR		H_5V2
  64A4  CD4860        	H_5V4:	CALL	RCVBYTE          ;チェックサム廃棄
  64A7  C9            			RET
  64A8  37            	H_5V5:	SCF
  64A9  C9            			RET
                      	;************ Wコマンド .CMT SAVE ********************************
  64AA  23            	MONSAVE:INC		HL
  64AB  CD4365        			CALL	STFN
  64AE  CD1165        			CALL	HLHEX            ;4桁の16進数であればSADRSにセットして続行
  64B1  D8            			RET		C
                      	;		JP		C,MONERR
  64B2  223DFF        			LD		(SADRS),HL       ;SARDS保存
  64B5  EB            			EX		DE,HL
                      	
  64B6  CD4365        			CALL	STFN
  64B9  CD1165        			CALL	HLHEX            ;4桁の16進数であればEADRSにセットして続行
  64BC  D8            			RET		C
                      	;		JP		C,MONERR
  64BD  223FFF        			LD		(EADRS),HL       ;EARDS保存
                      	
  64C0  D5            			PUSH	DE
  64C1  E5            			PUSH	HL
  64C2  ED5B3DFF      			LD		DE,(SADRS)
  64C6  ED52          			SBC		HL,DE
  64C8  E1            			POP		HL
  64C9  D1            			POP		DE
  64CA  D8            			RET		C
                      	;		JP		C,MONERR         ;EADRSがSADRSより小さければエラー
                      	
  64CB  EB            			EX		DE,HL
  64CC  2B            			DEC		HL
                      			
  64CD  3E70          			LD		A,70H            ;コマンド70Hを送信
  64CF  CD5264        			CALL	STCMD
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  64D2  C2F460        			JP		NZ,MONHOT
                      	;		JP		NZ,CMD1
                      	
  64D5  21B766        			LD		HL,MSG_WR        ;WRITING表示
  64D8  CDED52        			CALL	MSGOUT
                      	
  64DB  2A3DFF        			LD		HL,(SADRS)       ;SADRSを送信
  64DE  7D            			LD		A,L
  64DF  CD5B60        			CALL	SNDBYTE
  64E2  7C            			LD		A,H
  64E3  CD5B60        			CALL	SNDBYTE
  64E6  ED5B3FFF      			LD		DE,(EADRS)       ;送信する全体バイト数を算出するためにEADRSを送信
  64EA  7B            			LD		A,E
  64EB  CD5B60        			CALL	SNDBYTE
  64EE  7A            			LD		A,D
  64EF  CD5B60        			CALL	SNDBYTE
  64F2  7E            	MONSV1:	LD		A,(HL)           ;SADRSからEADRSまでを送信
  64F3  CD5B60        			CALL	SNDBYTE
  64F6  7C            			LD		A,H
  64F7  BA            			CP		D
  64F8  2004          			JR		NZ,MONSV2
  64FA  7D            			LD		A,L
  64FB  BB            			CP		E
  64FC  2803          			JR		Z,MONSV3         ;HL = DE までLOOP
  64FE  23            	MONSV2:	INC		HL
  64FF  18F1          			JR		MONSV1
  6501  21B166        	MONSV3:	LD		HL,MSG_OK        ;OK表示
  6504  CDED52        			CALL	MSGOUT
                      	;************************* MONHOTの扱い方を修正 2023.5.30 ****************************
  6507  C3F460        			JP		MONHOT
                      	;		JP		CMD1
                      	
                      	;**** コマンド送信 (IN:A コマンドコード)****
  650A  CD5B60        	STCD:	CALL	SNDBYTE          ;Aレジスタのコマンドコードを送信
  650D  CD4860        			CALL	RCVBYTE          ;状態取得(00H=OK)
  6510  C9            			RET
                      	
                      	;**** HLからの4Byteが16進数を表すアスキーコードであれば16進数に変換してHLに代入 **************
  6511  EB            	HLHEX:	EX		DE,HL
  6512  210000        			LD		HL,0000H
  6515  0604          			LD		B,04H
  6517  1A            	HLHEX1:	LD		A,(DE)
  6518  13            			INC		DE
  6519  CDC15F        			CALL	AZLCNV
  651C  CD395E        			CALL	HEXCHK
  651F  DA2865        			JP		C,HLHEX2
  6522  CD4B5E        			CALL	BINCV4
  6525  10F0          			DJNZ	HLHEX1
  6527  AF            			XOR		A
  6528  C9            	HLHEX2:	RET
                      	
                      	;**** HLからの2Byteが16進数を表すアスキーコードであれば16進数に変換してAに代入 **************
  6529  E5            	TWOHEX:	PUSH	HL
  652A  210000        			LD		HL,0000H
  652D  0602          			LD		B,02H
  652F  1A            	TWHEX1:	LD		A,(DE)
  6530  13            			INC		DE
  6531  CDC15F        			CALL	AZLCNV
  6534  CD395E        			CALL	HEXCHK
  6537  DA4165        			JP		C,TWHEX2
  653A  CD4B5E        			CALL	BINCV4
  653D  10F0          			DJNZ	TWHEX1
  653F  AF            			XOR		A
  6540  7D            			LD		A,L
  6541                	TWHEX2:
  6541  E1            			POP		HL
  6542  C9            			RET
                      	
                      	;****** FILE NAMEが取得できるまでスペース、ダブルコーテーションを読み飛ばし (IN:HL コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
  6543  F5            	STFN:	PUSH	AF
  6544  7E            	STFN1:	LD		A,(HL)
  6545  FE20          			CP		20H
  6547  2804          			JR		Z,STFN2
  6549  FE22          			CP		22H
  654B  2003          			JR		NZ,STFN3
  654D  23            	STFN2:	INC		HL               ;ファイルネームまでスペース読み飛ばし
  654E  18F4          			JR		STFN1
  6550  F1            	STFN3:	POP		AF
  6551  C9            			RET
                      	
  6552                	STSV2:                           ;ファイルネームの取得に失敗
  6552  213167        			LD		HL,MSG_FNAME
  6555  1856          			JR		ERRMSG
                      	
                      	;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
  6557  0620          	STFS:	LD		B,20H
  6559  7E            	STFS1:	LD		A,(HL)           ;FNAME送信
  655A  FE22          			CP		22H
  655C  2003          			JR		NZ,STFS2
  655E  23            			INC		HL
  655F  18F8          			JR		STFS1
  6561  CD5B60        	STFS2:	CALL	SNDBYTE
  6564  23            			INC		HL
  6565  05            			DEC		B
  6566  20F1          			JR		NZ,STFS1
  6568  3E0D          			LD		A,0DH
  656A  CD5B60        			CALL	SNDBYTE
  656D  CD4860        			CALL	RCVBYTE          ;状態取得(00H=OK)
  6570  C9            			RET
                      	
                      	;************** エラー内容表示 *****************************
  6571                	SDERR:
  6571  F5            			PUSH	AF
  6572  FEF0          			CP		0F0H
  6574  2005          			JR		NZ,ERR3
  6576  212968        			LD		HL,MSG_F0        ;SD-CARD INITIALIZE ERROR
  6579  1832          			JR		ERRMSG
  657B  FEF1          	ERR3:	CP		0F1H
  657D  2005          			JR		NZ,ERR4
  657F  214268        			LD		HL,MSG_F1        ;NOT FIND FILE
  6582  1829          			JR		ERRMSG
  6584  FEF3          	ERR4:	CP		0F3H
  6586  2005          			JR		NZ,ERR5
  6588  216068        			LD		HL,MSG_F3        ;FILE EXIST
  658B  1820          			JR		ERRMSG
  658D  FEF4          	ERR5:	CP		0F4H
  658F  2005          			JR		NZ,ERR6
  6591  214367        			LD		HL,MSG_CMD       ;COMMAND FAILED
  6594  1817          			JR		ERRMSG
  6596  FEF6          	ERR6:	CP		0F6H
  6598  2005          			JR		NZ,ERR99
  659A  213167        			LD		HL,MSG_FNAME     ;PARAMETER FAILED
  659D  180E          			JR		ERRMSG
  659F  CD835E        	ERR99:	CALL	MONBHX
  65A2  7A            			LD		A,D
  65A3  CD5702        			CALL	CONOUT
  65A6  7B            			LD		A,E
  65A7  CD5702        			CALL	CONOUT
  65AA  218C68        			LD		HL,MSG99         ;その他ERROR
  65AD  CDED52        	ERRMSG:	CALL	MSGOUT
  65B0  CDCA5F        			CALL	MONCLF
  65B3  CD5003        			CALL	DISPBL
  65B6  F1            			POP		AF
  65B7  C9            			RET
                      	
                      	;************** BASIC CMT LOAD *********************
  65B8                	CMDLOAD:
  65B8  2B            			DEC		HL
  65B9  3E73          			LD		A,73H            ;コマンド73Hを送信
  65BB  CD5264        			CALL	STCMD
  65BE  C29A66        			JP		NZ,RETBC
                      	
  65C1  211801        			LD		HL,0118H         ;1文字目、24行目へカーソルを移動
  65C4  CDA903        			CALL	CSR
  65C7  CDCA5F        			CALL	MONCLF
                      			
  65CA  CD4860        			CALL	RCVBYTE          ;ヘッダー受信
  65CD  FED3          			CP		0D3H             ;D3Hでなければエラー
  65CF  280C          			JR		Z,CMDLD
  65D1  217868        			LD		HL,MSG_F6        ;NOT BASIC PROGRAM
  65D4  CDED52        			CALL	MSGOUT
  65D7  CD5003        			CALL	DISPBL
  65DA  C39A66        			JP		RETBC
                      			
  65DD                	CMDLD:	
  65DD  213EEF        			LD		HL,FILNAM        ;CMTファイル中に記載のファイルネーム6文字を受信
  65E0  0606          			LD		B,06H
  65E2  CD4860        	CMDLD2:	CALL	RCVBYTE
  65E5  77            			LD		(HL),A
  65E6  23            			INC		HL
  65E7  10F9          			DJNZ	CMDLD2
                      	
  65E9  21A866        			LD		HL,MSG_LD        ;LOADING表示
  65EC  CDED52        			CALL	MSGOUT
                      	
  65EF  213EEF        			LD		HL,FILNAM        ;ファイルネーム表示
  65F2  1196EC        			LD		DE,IBUF
  65F5  010600        			LD		BC,0006H
  65F8  EDB0          			LDIR
  65FA  AF            			XOR		A
  65FB  12            			LD		(DE),A
  65FC  2196EC        			LD		HL,IBUF
  65FF  CDED52        			CALL	MSGOUT
  6602  CDCA5F        			CALL	MONCLF
                      			
  6605  2A54EB        			LD		HL,(BASSRT)      ;BASICプログラム格納開始位置をHLに設定
                      	
  6608  060C          	CMDLD3:	LD		B,0CH            ;00Hを12個連続で受信するまでループ
  660A  CD4860        	CMDLD4:	CALL	RCVBYTE
  660D  77            			LD		(HL),A
  660E  23            			INC		HL
                      	
  660F  A7            			AND		A
  6610  2802          			JR		Z,CMDLD5
  6612  18F4          			JR		CMDLD3
  6614  05            	CMDLD5:	DEC		B
  6615  2802          			JR		Z,CMDLD6
  6617  18F1          			JR		CMDLD4
                      	
  6619  010700        	CMDLD6:	LD		BC,0007H         ;HLの位置を7つ戻してBASICプログラム終了位置とする
  661C  ED42          			SBC		HL,BC
                      			
  661E  187D          			JR		RETBC2           ;BASICプログラムLOAD後処理
                      			
                      	;********************** BASIC CMT SAVE **********************
  6620                	CMDSAVE:
  6620  E5            			PUSH	HL
  6621  2A54EB        			LD		HL,(BASSRT)      ;BASICプログラム格納開始位置をHLに設定
  6624  7E            			LD		A,(HL)
  6625  23            			INC		HL
  6626  B6            			OR		(HL)
  6627  E1            			POP		HL
  6628  CA6B66        			JP		Z,CMDSV5         ;BASICプログラムが1行もなければエラー
                      	
  662B  2B            			DEC		HL
  662C  3E74          			LD		A,74H            ;コマンド74Hを送信
  662E  CD5264        			CALL	STCMD
  6631  2036          			JR		NZ,CMDSV4
                      	
  6633  21B766        			LD		HL,MSG_WR        ;WRITING表示
  6636  CDED52        			CALL	MSGOUT
                      	
  6639  CD865B        			CALL	RENUM9           ;BASICプログラムSAVE前処理
  663C  2A54EB        			LD		HL,(BASSRT)      ;BASSRTからVARBGN-1までを送信
  663F  7D            			LD		A,L
  6640  CD5B60        			CALL	SNDBYTE
  6643  7C            			LD		A,H
  6644  CD5B60        			CALL	SNDBYTE
  6647  ED5BA0EF      			LD		DE,(VARBGN)
  664B  1B            			DEC		DE
  664C  7B            			LD		A,E
  664D  CD5B60        			CALL	SNDBYTE
  6650  7A            			LD		A,D
  6651  CD5B60        			CALL	SNDBYTE
  6654  7E            	CMDSV1:	LD		A,(HL)
  6655  CD5B60        			CALL	SNDBYTE
  6658  7C            			LD		A,H
  6659  BA            			CP		D
  665A  2004          			JR		NZ,CMDSV2
  665C  7D            			LD		A,L
  665D  BB            			CP		E
  665E  2803          			JR		Z,CMDSV3         ;HL = DE までLOOP
  6660  23            	CMDSV2:	INC		HL
  6661  18F1          			JR		CMDSV1
                      			
  6663                	CMDSV3:
  6663  21B166        			LD		HL,MSG_OK        ;OK表示
  6666  CDED52        			CALL	MSGOUT
                      	;2022.8.4  SYNTAX ERROR回避
  6669  182F          	CMDSV4:	JR		RETBC
                      	
                      	;2022.8.4  SYNTAX ERROR回避
  666B                	CMDSV5:
  666B  CD5003        			CALL	DISPBL
  666E  216B68        			LD		HL,MSG_F5        ;NO BASIC PROGRAM
  6671  1821          			JR		RETBC3
                      	
                      	;************ BASIC FILES ********************
  6673                	CMDFILES:
                      	;2022.7.24 SYNTAX ERROR回避により、廃止
                      	;		PUSH	HL
                      	;		LD		HL,FMSG          ;FILESの後ろにファイル名検索文字を指定すると構文エラーになるため、別行として入力
                      	;		CALL	MSGOUT
                      	;		CALL	LINPUT
                      	;		INC		HL
  6673  CD4365        			CALL	STFN             ;入力文字列取得
  6676  EB            			EX		DE,HL
  6677  219968        			LD		HL,DEFDIR2       ;行頭に'LOAD 'を付けることでカーソルを移動させリターンで実行できるように
  667A  010600        			LD		BC,D2END-DEFDIR2
  667D  CDDE61        			CALL	DIRLIST          ;DIRLIST本体をコール
                      	;2022.8.4  SYNTAX ERROR回避
  6680  1818          			JR		RETBC
                      			
                      	;************ BASIC KILL ***************************
  6682                	CMDKILL:
  6682  2B            			DEC		HL
  6683  3E75          			LD		A,75H            ;コマンド75Hを送信
  6685  CD5264        			CALL	STCMD
  6688  2010          			JR		NZ,RETBC         ;ファイル名が送信できなかった。
  668A  CD4860        			CALL	RCVBYTE
  668D  A7            			AND		A
  668E  C2A066        			JP		NZ,CMDKL1         ;ファイルが存在しない
  6691  21C066        			LD		HL,MSG_KL
  6694  CDED52        	RETBC3:	CALL	MSGOUT
  6697  CDCA5F        			CALL	MONCLF
                      	
                      	;2022.8.4 SYNTAX ERROR回避 
                      	;FILES SAVE KILLからBASICへ正しい戻り方が判らなかったため、LOAD後処理で戻ることとする。
  669A                	RETBC:
  669A  2AA0EF        			LD		HL,(VARBGN)
                      	;LOAD後処理
  669D                	RETBC2:
  669D  C38B1F        			JP		AFTLOAD          ;BASICプログラムLOAD後処理
                      			
                      	;2022.8.4  SYNTAX ERROR回避
  66A0                	CMDKL1:
  66A0  CD5003        			CALL	DISPBL
  66A3  214268        			LD		HL,MSG_F1        ;NOT FIND FILE
  66A6  18EC          			JR		RETBC3
                      	
  66A8                	MSG_LD:
  66A8  4C4F4144494E47			DB		'LOADING '
  66B0  00            	DEFCR:	DB		00H
                      	
  66B1                	MSG_OK:
  66B1  4F4B21        			DB		'OK!'
  66B4  0D0A00        			DB		0DH,0AH,00H
                      	
  66B7                	MSG_WR:
  66B7  57524954494E47			DB		'WRITING '
  66BF  00            			DB		00H
                      	
  66C0                	MSG_KL:
  66C0  46494C45204445			DB		'FILE DELETED!'
  66CD  00            			DB		00H
                      	
  66CE                	MSG_AD1:
  66CE  41445253202B30			DB		'ADRS +0 +1 +2 +3 +4 +5 +6 +7 01234567'
  66F3  0D0A00        			DB		0DH,0AH,00H
                      			
  66F6                	MSG_AD2:
  66F6  4E4558543A414E			DB		'NEXT:ANY BACK:B BREAK:ESC'
  670F  0D0A00        			DB		0DH,0AH,00H
                      			
  6712                	MSG_KEY1:
  6712  4E4558543A414E			DB		'NEXT:ANY BACK:B BREAK:'
  6728  00            			DB		00H
  6729                	MSG_KEY2:
  6729  204F5220455343			DB		' OR ESC'
  6730  00            			DB		00H
                      	
  6731                	MSG_FNAME:
  6731  504152414D4554			DB		'PARAMETAR FAILED!'
  6742  00            			DB		00H
                      			
  6743                	MSG_CMD:
  6743  434F4D4D414E44			DB		'COMMAND FAILED!',0DH,0AH
  6754  20422020202020			DB		' B             : Return Basic',0DH,0AH
  6773  2044206E6E6E6E			DB		' D nnnn        : Memory Dump',0DH,0AH
  6791  20462078202020			DB		' F x           : Find SD File',0DH,0AH
  67B0  2047206E6E6E6E			DB		' G nnnn        : Exec Program',0DH,0AH
  67CF  204C2078202020			DB		' L x           : Load From SD',0DH,0AH
  67EE  2053206E6E6E6E			DB		' S nnnn nn..   : Memory Write',0DH,0AH
  680D  2057206E6E6E6E			DB		' W nnnn nnnn x : Save To SD'
  6828  00            			DB		00H
                      			
  6829                	MSG_F0:
  6829  53442D43415244			DB		'SD-CARD INITIALIZE ERROR'
  6841  00            			DB		00H
                      			
  6842                	MSG_F1:
  6842  4E4F542046494E			DB		'NOT FIND FILE'
  684F  00            			DB		00H
                      			
  6850                	MSG_F2:
  6850  4E4F54204F424A			DB		'NOT OBJECT FILE'
  685F  00            			DB		00H
                      			
  6860                	MSG_F3:
  6860  46494C45204558			DB		'FILE EXIST'
  686A  00            			DB		00H
                      			
  686B                	MSG_F5:
  686B  4E4F2050524F47			DB		'NO PROGRAM!!'
  6877  00            			DB		00H
                      			
  6878                	MSG_F6:
  6878  4E4F5420424153			DB		'NOT BASIC PROGRAM'
  6889  0D0A00        			DB		0DH,0AH,00H
                      			
  688C                	MSG99:
  688C  204552524F52  			DB		' ERROR'
  6892  00            			DB		00H
                      			
  6893  2A53          	MSG_FDW:	DB		'*S'
  6895  00            			DB		00H
                      	
  6896                	DEFDIR:
  6896  2A4C20        			DB		'*L '
  6899                	DEND:
                      	
  6899                	DEFDIR2:
  6899  4C4F41442022  			DB		'LOAD ',22H
  689F                	D2END:
                      	
                      	
  7FFC                			ORG		7FFCH
                      	
                      	;************* 代替MONITORへジャンプするための設定 *************
  7FFC  C38B60        			JP		MONINI
  7FFF  55            			DB		55H
                      			
  8000                			END
